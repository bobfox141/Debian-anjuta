AT_SETUP([Various bugs])



AS_MKDIR_P([project1])
AT_DATA([project1/configure.ac],
[[
PKG_CHECK_MODULES(TEST,ncurses)
AC_CONFIG_FILES(Makefile)
]])
AT_DATA([project1/Makefile.am],
[[]])
AT_DATA([expect],
[[ROOT (): bug1
    SOURCE (): configure.ac
    SOURCE (): Makefile.am
]])
AT_PARSER_CHECK([load project1 \
		 move bug1 \
		 remove 0:1 \
		 list \
		 save])
AT_CHECK([diff output expect])
AT_PARSER_CHECK([load bug1 \
		 list])
AT_CHECK([diff output expect])



AS_MKDIR_P([project2])
AT_DATA([project2/configure.ac],
[[
AC_CONFIG_FILES(Makefile)
]])
AT_DATA([project2/Makefile.am],
[[
program_CFLAGS=-g
noinst_PROGRAMS = program
]])
AT_DATA([expect],
[[ROOT (): project2
    TARGET (): program
        PROPERTY (C compiler flags): -g
        PROPERTY (Do not install): true
    SOURCE (): configure.ac
    SOURCE (): Makefile.am
]])
AT_PARSER_CHECK([load project2 \
		 list])
AT_CHECK([diff output expect])



AS_MKDIR_P([project3])
AT_DATA([project3/configure.ac],
[[
AC_CONFIG_FILES(Makefile)
]])
AT_DATA([project3/Makefile.am],
[[
ALL_LINGUAS = $(notdir *.po)

catalogs: $(ALL_LINGUAS)
        $(ALL_LINGUAS)

noinst_PROGRAMS = program
]])
AT_DATA([expect],
[[ROOT (): project3
    TARGET (): program
        PROPERTY (Do not install): true
    SOURCE (): configure.ac
    SOURCE (): Makefile.am
]])
AT_PARSER_CHECK([load project3 \
		 list])
AT_CHECK([diff output expect])



AS_MKDIR_P([project4])
AT_DATA([project4/configure.ac],
[[
AC_CONFIG_FILES(Makefile)
]])
AT_DATA([project4/Makefile.am],
[[
GDU__v_DB2OMF_=$(GDU__v_DB2OMF_$(AM_DEFAULT_VERBOSITY))

$(GDU__v_DB2OMF_)
]])
AT_DATA([expect],
[[ROOT (): project4
    SOURCE (): configure.ac
    SOURCE (): Makefile.am
]])
AT_PARSER_CHECK([load project4 \
		 list])
AT_CHECK([diff output expect])



AT_CLEANUP
